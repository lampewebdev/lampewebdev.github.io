{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","ListQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","IndexPage","props","postList","data","allMarkdownRemark","a","createElement","edges","map","_ref","i","node","to","fields","slug","className","frontmatter","title","date","excerpt","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header","paddingTop","_755544856"],"mappings":"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","file":"component---src-pages-index-js-3a27d9422e9abe235371.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\n// import Image from '../components/image'\n\nconst IndexPage = props => {\n  const postList = props.data.allMarkdownRemark\n  return (\n    <Layout>\n      {postList.edges.map(({ node }, i) => (\n        <Link to={node.fields.slug} className=\"link\" >\n          <div className=\"post-list\">\n            <h1>{node.frontmatter.title}</h1>\n            <span>{node.frontmatter.date}</span>\n            <p>{node.excerpt}</p>\n          </div>\n        </Link>\n      ))}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const ListQuery = graphql`\n  query ListQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM Do YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}