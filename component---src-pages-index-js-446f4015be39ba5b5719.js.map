{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Logo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","ListQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","Container","styled","div","withConfig","displayName","componentId","Date","Excerpt","p","Header","h1","IndexPage","props","postList","data","allMarkdownRemark","a","createElement","edges","map","_ref","i","node","to","fields","slug","className","key","frontmatter","title","date","excerpt","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Logo","react_default","gatsby_browser_entry","gatsby_image_default","fixed","placeholderImage","childImageSharp","_193324865","header","style","backgroundColor","paddingTop","paddingBottom","paddingLeft","textAlign","boxShadow","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","siteTitle","_755544856"],"mappings":"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","file":"component---src-pages-index-js-446f4015be39ba5b5719.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  text-decoration: none;\n  max-width: 630px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  box-shadow: \n    rgba(0, 0, 0, 0.14) 0px 2px 2px 0px,\n    rgba(0, 0, 0, 0.2) 0px 3px 1px -2px,\n    rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;\n`\n\nconst Date = styled.div`\n  padding: 15px;\n  color: black;\n`\n\nconst Excerpt = styled.p`\n  color: black;\n  padding: 15px;\n  padding-top:0;\n`\n\nconst Header = styled.h1`\n  padding: 15px;\n`\n\nconst IndexPage = props => {\n  const postList = props.data.allMarkdownRemark\n  return (\n    <Layout>\n      {postList.edges.map(({ node }, i) => (\n        <Container>\n          <Link to={node.fields.slug} className=\"link\" key={i}>\n            <div className=\"post-list-item\">\n              <Header>{node.frontmatter.title}</Header>\n              <Date>{node.frontmatter.date}</Date>\n              <Excerpt>{node.excerpt}</Excerpt>\n            </div>\n          </Link>\n        </Container>\n      ))}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const ListQuery = graphql`\n  query ListQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"Do MMMM YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(\n            relativePath: { eq: \"logoWithoutFont.png\" }\n          ) {\n            childImageSharp {\n            fixed(height: 60) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data =>\n      <Img\n        fixed={data.placeholderImage.childImageSharp.fixed}\n      />\n    }\n  />\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Logo from './Logo'\nexport default () => (\n  <h1\n    style={{\n      backgroundColor: '#37a99a',\n      paddingTop: '10px',\n      paddingBottom: '10px',\n      paddingLeft: '15px',\n      textAlign: 'center',\n      boxShadow:\n        `0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23)`,\n    }}\n  >\n    <Link to=\"  /\">\n      <Logo />\n    </Link>\n  </h1>\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div>\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}